#include "../include/chip8.h"

//CHIP-8 specifications
unsigned short opcode; //the operation code of the instruction
unsigned char memory[MEMORY]; //the total memory of the chip-8
unsigned char V[16]; //all the general purpose registers

unsigned short I; //special register I for memory addresses
unsigned short pc; //Program counter


unsigned char gpx[SCREEN_WIDTH * SCREEN_WIDTH]; //pixels of the screen

unsigned char delay_timer;
unsigned char sound_timer;

//STACK
unsigned short stack[16];
unsigned short sp; //stack pointer

unsigned char keyPad[16];

//0x000-0x1FF - Chip 8 interpreter (contains font set in emu)
//0x050-0x0A0 - Used for the built in 4x5 pixel font set (0-F)
//0x200-0xFFF - Program ROM and work RAM

void initialize(){
    initializeMemory();

    initRegisters();
}
void initializeMemory(){
    opcode = 0;
    for(int i = 0; i < MEMORY; i++){
        memory[i] = '\0';
    }
}

void initRegisters(){
    for(int i = 0; i < 16; i++){
        V[i] = 0;
    }
    I = 0;
    pc = 0x200;
}

void emulateCycle(){
    //FETCH
    //DECODE
    //EXECUTE
    opcode = memory[pc] << 8 | memory[pc + 1];
}
